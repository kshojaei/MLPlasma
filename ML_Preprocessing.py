import numpy as np import matplotlib.pyplot as pltimport pandas as pdimport scipy.signal as spimport globfrom scipy.signal import find_peaksfrom scipy import sparsefrom scipy.sparse.linalg import spsolvep_696_57_ = []p_706_73_ = []p_738_45_ = []p_750_42_ = []p_751_52_ = []p_763_55_ = []p_772_44_ = [] p_794_90_ = []p_800_70_ = []p_801_57_ = []p_810_43_ = []p_811_58_ = []p_826_49_ = []p_840_90_ = []p_842_53_ = []p_852_21_ = []p_912_33_ = []p_922_48_ = []p_965_80_ = []pdir = r'/Users/scienceman/Desktop/Deep_Learning/Spectro_Lang_Data/ML_Data/'thor_dir = pdir + 'SLS201L_Spectrum.csv'cal_dir = pdir + 'lamp.csv'calib = pd.read_csv(cal_dir)thor = pd.read_csv(thor_dir)  # Calibration File on Thors lab for SLS201L Red Lamp# Wavelength (nm)wave_thor = np.array(thor.iloc[:,0]).astype(float)# Intensity (a.u.)int_thor = np.array(thor.iloc[:,1]).astype(float)wave_interp = np.linspace(340,1000,1000000)# Interpoated Calibration File on Thor's Labint_thorp = np.interp(wave_interp,wave_thor, int_thor)calib = pd.read_csv(cal_dir) # Calibration File taken in the lab with the red lampwave_cal = np.array(calib.iloc[:,0]).astype(float)# Intensity of measurement with red lampint_cal = np.array(calib.iloc[:,1]).astype(float)# Smoothed Intensity of the measurement with red lamp int_cal_sav = sp.savgol_filter(int_cal,4001, 2)# Interpolated Smoothed Intensity of the red lamp 340-1000 nm rangeint_calp = np.interp(wave_interp, wave_cal, int_cal_sav)# Calibration Filecalib_file = int_thorp / int_calppdir = r'/Users/scienceman/Desktop/Spectroscopy/'s_files  = glob.glob(pdir + '/*.csv')for s in s_files:    print('_______________________________')    print(s[39:])    # Importing the the csv files for the spectroscopic measurements    Em = pd.read_csv(s, delimiter = ',')    wave = np.array(Em.iloc[:,0]).astype(float)    spect = np.array(Em.iloc[:,1]).astype(float)    spect_p = np.interp(wave_interp,wave,spect)    # Offseting the baseline to zero    spect_pp = spect_p - spect_p[0]    # Calibrating the emission spectrum with the calib file    calib_spect = spect_pp * calib_file    # Area of the emission spectrum     area_spect =  np.trapz(calib_spect,wave_interp)    # Normalized emission spectrum    norm_spect = calib_spect / area_spect    # Normalized emission spectrum with respect to 811.58 nm line    fig = plt.gcf()    plt.grid(True)    fig.set_size_inches(7,7)    plt.rcParams.update({'font.size' : 15})    l = len(wave_interp)    # All normalized peak intensities    g = 0.02    p_696_57_.append(np.max(find_peaks(norm_spect[540100:540400], height= g)[1]['peak_heights']))    p_706_73_.append(np.max(find_peaks(norm_spect[555358:555958], height= g)[1]['peak_heights']))    p_738_45_.append(np.max(find_peaks(norm_spect[603512:603912], height= g)[1]['peak_heights']))    p_750_42_.append(np.max(find_peaks(norm_spect[621681:622000], height= g)[1]['peak_heights']))    p_751_52_.append(np.max(find_peaks(norm_spect[623215:623715], height= g)[1]['peak_heights']))    p_763_55_.append(np.max(find_peaks(norm_spect[641556:641956], height= g)[1]['peak_heights']))    p_772_44_.append(np.max(find_peaks(norm_spect[655048:655448], height= g)[1]['peak_heights']))    p_794_90_.append(np.max(find_peaks(norm_spect[689021:689421], height= g)[1]['peak_heights']))    p_800_70_.append(np.max(find_peaks(norm_spect[697900:698211], height= g)[1]['peak_heights']))    p_801_57_.append(np.max(find_peaks(norm_spect[699129:699529], height= g)[1]['peak_heights']))    p_810_43_.append(np.max(find_peaks(norm_spect[712554:712954], height= g)[1]['peak_heights']))    p_811_58_.append(np.max(find_peaks(norm_spect[714316:714716], height= g)[1]['peak_heights']))    p_826_49_.append(np.max(find_peaks(norm_spect[737000:737317], height= g)[1]['peak_heights']))    p_840_90_.append(np.max(find_peaks(norm_spect[758713:759000], height= g)[1]['peak_heights']))    p_842_53_.append(np.max(find_peaks(norm_spect[761222:761622], height= g)[1]['peak_heights']))    p_852_21_.append(np.max(find_peaks(norm_spect[775900:776280], height= g)[1]['peak_heights']))    p_912_33_.append(np.max(find_peaks(norm_spect[867000:867379], height= g)[1]['peak_heights']))    p_922_48_.append(np.max(find_peaks(norm_spect[882355:882755], height= g)[1]['peak_heights']))    p_965_80_.append(np.max(find_peaks(norm_spect[948000:948395], height= g)[1]['peak_heights']))    # ML input: Lines Ratios            #peaks = find_peaks(norm_spect, height= 0.2)    #print(ml_peaks.shape)    #plt.plot(wave_interp,norm_spect)    #print(np.trapz((spect_p-spect_p[0]), wave_interp))    #plt.ylim(-0.01,0.5)    #plt.xlim(800,870)    np.savetxt('ML_Inputs_Outputs.csv', np.column_stack([p_696_57_,p_706_73_,p_738_45_,p_750_42_,p_751_52_,p_763_55_,                                                     p_772_44_,p_794_90_,p_800_70_,p_801_57_,p_810_43_,p_811_58_,                                                     p_826_49_,p_840_90_,p_842_53_,p_852_21_,p_912_33_,p_922_48_,p_965_80_]), delimiter=',')           #'p_696_57, p_706_73,p_738_45,p_750_42, p_751_52, p_763_55, p_772_44, p_794_90, p_800_70, p_801_57, p_810_43,p_811_58, p_826_49, p_840_90, p_842_53, p_852_21, p_912_33, p_922_48,p_965_80')        